{
	"name": "dataflow3",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "df_ds_json",
						"type": "DatasetReference"
					},
					"name": "djsondata"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "df_ds_json_to_csv",
						"type": "DatasetReference"
					},
					"name": "datatoscsvortable"
				}
			],
			"transformations": [
				{
					"name": "flattenjsondata"
				}
			],
			"scriptLines": [
				"source(output(",
				"          raw_data as (agebracket as string, backupnotes as string, contractedfromwhichpatientsuspected as string, currentstatus as string, dateannounced as string, detectedcity as string, detecteddistrict as string, detectedstate as string, estimatedonsetdate as string, gender as string, nationality as string, notes as string, patientnumber as string, source1 as string, source2 as string, source3 as string, statecode as string, statepatientnumber as string, statuschangedate as string, typeoftransmission as string)[]",
				"     ),",
				"     allowSchemaDrift: false,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     documentForm: 'singleDocument') ~> djsondata",
				"djsondata foldDown(unroll(raw_data, raw_data),",
				"     mapColumn(",
				"          age = raw_data.agebracket,",
				"          gender = raw_data.gender,",
				"          nationality = raw_data.nationality,",
				"          notes = raw_data.notes,",
				"          patientnumber = raw_data.patientnumber,",
				"          statecode = raw_data.statecode",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> flattenjsondata",
				"flattenjsondata sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> datatoscsvortable"
			]
		}
	}
}