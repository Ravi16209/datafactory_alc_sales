{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "adf-alc-eus-dev"
		},
		"ls_gen2_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'ls_gen2'"
		},
		"ls_gen2_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://stgalceusraw1dev.dfs.core.windows.net/"
		},
		"ls_gen2_stgalceusraw1dev_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://stgalceusraw1dev.dfs.core.windows.net/"
		},
		"ls_gen2_stgalceusraw1dev_properties_typeProperties_tenant": {
			"type": "string",
			"defaultValue": "ac6d0bfb-0888-4ba4-8e1b-64368ebde8ff"
		},
		"ls_gen2_stgalceusraw1dev_properties_typeProperties_servicePrincipalId": {
			"type": "string",
			"defaultValue": "a4d0a191-86c1-4f21-ab13-450bca78e778"
		},
		"ls_testing_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://stgalceusraw1dev.dfs.core.windows.net/"
		},
		"ls_testing_properties_typeProperties_tenant": {
			"type": "string",
			"defaultValue": "ac6d0bfb-0888-4ba4-8e1b-64368ebde8ff"
		},
		"ls_testing_properties_typeProperties_servicePrincipalId": {
			"type": "string",
			"defaultValue": "bbe1fb4b-6318-4fb3-a877-daa5832ed16a"
		},
		"blob_created_properties_typeProperties_scope": {
			"type": "string",
			"defaultValue": "/subscriptions/390c249f-2450-4238-9b6d-db88b756fb45/resourceGroups/rg_alc_eus_dev/providers/Microsoft.Storage/storageAccounts/stgalceusraw1dev"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/ls_gen2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('ls_gen2_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('ls_gen2_accountKey')]"
					}
				},
				"connectVia": {
					"referenceName": "shir-alc-eus-dev",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_gen2_stgalceusraw1dev')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('ls_gen2_stgalceusraw1dev_properties_typeProperties_url')]",
					"tenant": "[parameters('ls_gen2_stgalceusraw1dev_properties_typeProperties_tenant')]",
					"servicePrincipalId": "[parameters('ls_gen2_stgalceusraw1dev_properties_typeProperties_servicePrincipalId')]",
					"servicePrincipalCredentialType": "ServicePrincipalKey",
					"servicePrincipalCredential": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "ls_azure_key",
							"type": "LinkedServiceReference"
						},
						"secretName": "spn-value"
					}
				},
				"connectVia": {
					"referenceName": "shir-alc-eus-dev",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_testing')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('ls_testing_properties_typeProperties_url')]",
					"tenant": "[parameters('ls_testing_properties_typeProperties_tenant')]",
					"servicePrincipalId": "[parameters('ls_testing_properties_typeProperties_servicePrincipalId')]",
					"servicePrincipalCredentialType": "ServicePrincipalCert",
					"servicePrincipalCredential": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "ls_keyVALUT",
							"type": "LinkedServiceReference"
						},
						"secretName": "spnsecrect"
					}
				},
				"connectVia": {
					"referenceName": "shir-alc-eus-dev",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/blob_created')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "blob_automated_mail",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "BlobEventsTrigger",
				"typeProperties": {
					"blobPathBeginsWith": "/stg1container/blobs/INPUT_DATAFILES/Reject_NEW/",
					"ignoreEmptyBlobs": true,
					"scope": "[parameters('blob_created_properties_typeProperties_scope')]",
					"events": [
						"Microsoft.Storage.BlobCreated"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/adfcdc1')]",
			"type": "Microsoft.DataFactory/factories/adfcdcs",
			"apiVersion": "2018-06-01",
			"properties": {
				"SourceConnectionsInfo": [
					{
						"SourceEntities": [
							{
								"name": "ODS.PERSONS",
								"properties": {
									"schema": [
										{
											"name": "Index_NO",
											"dataType": "long"
										},
										{
											"name": "User_Id",
											"dataType": "string"
										},
										{
											"name": "First_Name",
											"dataType": "string"
										},
										{
											"name": "Last_Name",
											"dataType": "string"
										},
										{
											"name": "Sex",
											"dataType": "string"
										},
										{
											"name": "Email",
											"dataType": "string"
										},
										{
											"name": "Phone",
											"dataType": "string"
										},
										{
											"name": "Date_of_birth",
											"dataType": "date"
										},
										{
											"name": "Job_Title",
											"dataType": "string"
										}
									],
									"dslConnectorProperties": [
										{
											"name": "format",
											"value": "table"
										},
										{
											"name": "store",
											"value": "sqlserver"
										},
										{
											"name": "schemaName",
											"value": "ODS"
										},
										{
											"name": "tableName",
											"value": "PERSONS"
										},
										{
											"name": "databaseType",
											"value": "databaseType"
										},
										{
											"name": "database",
											"value": "database"
										},
										{
											"name": "enableCdc",
											"value": true
										},
										{
											"name": "skipInitialLoad",
											"value": true
										},
										{
											"name": "waterMarkColumn",
											"value": "Date_of_birth"
										}
									]
								}
							}
						],
						"Connection": {
							"linkedService": {
								"referenceName": "ls_sql",
								"type": "LinkedServiceReference"
							},
							"linkedServiceType": "AzureSqlDatabase",
							"type": "linkedservicetype",
							"isInlineDataset": true
						}
					}
				],
				"TargetConnectionsInfo": [
					{
						"TargetEntities": [
							{
								"name": "MAIN.PERSONS",
								"properties": {
									"schema": [
										{
											"name": "Index_NO",
											"dataType": "long"
										},
										{
											"name": "User_Id",
											"dataType": "string"
										},
										{
											"name": "First_Name",
											"dataType": "string"
										},
										{
											"name": "Last_Name",
											"dataType": "string"
										},
										{
											"name": "Sex",
											"dataType": "string"
										},
										{
											"name": "Email",
											"dataType": "string"
										},
										{
											"name": "Phone",
											"dataType": "string"
										},
										{
											"name": "Date_of_birth",
											"dataType": "date"
										},
										{
											"name": "Job_Title",
											"dataType": "string"
										},
										{
											"name": "updatedtime",
											"dataType": "timestamp"
										}
									],
									"dslConnectorProperties": [
										{
											"name": "format",
											"value": "table"
										},
										{
											"name": "store",
											"value": "sqlserver"
										},
										{
											"name": "schemaName",
											"value": "MAIN"
										},
										{
											"name": "tableName",
											"value": "PERSONS"
										},
										{
											"name": "databaseType",
											"value": "databaseType"
										},
										{
											"name": "database",
											"value": "database"
										},
										{
											"name": "deletable",
											"value": false
										},
										{
											"name": "insertable",
											"value": true
										},
										{
											"name": "updateable",
											"value": false
										},
										{
											"name": "upsertable",
											"value": false
										},
										{
											"name": "skipDuplicateMapInputs",
											"value": true
										},
										{
											"name": "skipDuplicateMapOutputs",
											"value": true
										}
									]
								}
							}
						],
						"Connection": {
							"linkedService": {
								"referenceName": "ls_sql",
								"type": "LinkedServiceReference"
							},
							"linkedServiceType": "AzureSqlDatabase",
							"type": "linkedservicetype",
							"isInlineDataset": true
						},
						"DataMapperMappings": [
							{
								"targetEntityName": "MAIN.PERSONS",
								"sourceEntityName": "ODS.PERSONS",
								"sourceConnectionReference": {
									"connectionName": "ls_sql",
									"type": "linkedservicetype"
								},
								"attributeMappingInfo": {
									"attributeMappings": [
										{
											"name": "Date_of_birth",
											"type": "Direct",
											"functionName": "",
											"attributeReference": {
												"name": "Date_of_birth",
												"entity": "ODS.PERSONS",
												"entityConnectionReference": {
													"connectionName": "ls_sql",
													"type": "linkedservicetype"
												}
											}
										},
										{
											"name": "Email",
											"type": "Direct",
											"functionName": "",
											"attributeReference": {
												"name": "Email",
												"entity": "ODS.PERSONS",
												"entityConnectionReference": {
													"connectionName": "ls_sql",
													"type": "linkedservicetype"
												}
											}
										},
										{
											"name": "First_Name",
											"type": "Direct",
											"functionName": "",
											"attributeReference": {
												"name": "First_Name",
												"entity": "ODS.PERSONS",
												"entityConnectionReference": {
													"connectionName": "ls_sql",
													"type": "linkedservicetype"
												}
											}
										},
										{
											"name": "Index_NO",
											"type": "Direct",
											"functionName": "",
											"attributeReference": {
												"name": "Index_NO",
												"entity": "ODS.PERSONS",
												"entityConnectionReference": {
													"connectionName": "ls_sql",
													"type": "linkedservicetype"
												}
											}
										},
										{
											"name": "Job_Title",
											"type": "Direct",
											"functionName": "",
											"attributeReference": {
												"name": "Job_Title",
												"entity": "ODS.PERSONS",
												"entityConnectionReference": {
													"connectionName": "ls_sql",
													"type": "linkedservicetype"
												}
											}
										},
										{
											"name": "Last_Name",
											"type": "Direct",
											"functionName": "",
											"attributeReference": {
												"name": "Last_Name",
												"entity": "ODS.PERSONS",
												"entityConnectionReference": {
													"connectionName": "ls_sql",
													"type": "linkedservicetype"
												}
											}
										},
										{
											"name": "Phone",
											"type": "Direct",
											"functionName": "",
											"attributeReference": {
												"name": "Phone",
												"entity": "ODS.PERSONS",
												"entityConnectionReference": {
													"connectionName": "ls_sql",
													"type": "linkedservicetype"
												}
											}
										},
										{
											"name": "Sex",
											"type": "Direct",
											"functionName": "",
											"attributeReference": {
												"name": "Sex",
												"entity": "ODS.PERSONS",
												"entityConnectionReference": {
													"connectionName": "ls_sql",
													"type": "linkedservicetype"
												}
											}
										},
										{
											"name": "updatedtime",
											"type": "Direct",
											"functionName": "",
											"attributeReference": {
												"name": "Date_of_birth",
												"entity": "ODS.PERSONS",
												"entityConnectionReference": {
													"connectionName": "ls_sql",
													"type": "linkedservicetype"
												}
											}
										},
										{
											"name": "User_Id",
											"type": "Direct",
											"functionName": "",
											"attributeReference": {
												"name": "User_Id",
												"entity": "ODS.PERSONS",
												"entityConnectionReference": {
													"connectionName": "ls_sql",
													"type": "linkedservicetype"
												}
											}
										}
									]
								}
							}
						],
						"Relationships": []
					}
				],
				"Policy": {
					"recurrence": {
						"frequency": "Minute",
						"interval": 15
					},
					"mode": "Microbatch"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/COPY_SQL_SQL_DELTA_WITHOUT_TABLE_TYPE')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy_SQLTOSQL_TABLE_TYPE",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "truncate table ODS.std_details;",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_sql",
								"type": "DatasetReference",
								"parameters": {
									"schemaname": {
										"value": "dbo",
										"type": "Expression"
									},
									"tablename": {
										"value": "std_details",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_sql",
								"type": "DatasetReference",
								"parameters": {
									"schemaname": {
										"value": "ODS",
										"type": "Expression"
									},
									"tablename": {
										"value": "std_details",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "ODSTOSQL",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Copy_SQLTOSQL_TABLE_TYPE",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[ODS].[LOAD_STUDENT_DETAILS]"
						},
						"linkedServiceName": {
							"referenceName": "ls_sql",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "DELTA_ACTIVITIES"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-19T18:54:18Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DELTA_USING_TABLE_TYPE')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy_SQLTOSQL_TABLE_TYPE",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"sqlWriterStoredProcedureName": "[[MAIN].[LOAD_STD_DETAILS]",
								"sqlWriterTableType": {
									"value": "[[MAIN].[STD_TYPE]",
									"type": "Expression"
								},
								"storedProcedureTableTypeParameterName": {
									"value": "STDDETAILS",
									"type": "Expression"
								},
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_sql",
								"type": "DatasetReference",
								"parameters": {
									"schemaname": {
										"value": "dbo",
										"type": "Expression"
									},
									"tablename": {
										"value": "std_details",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_sql",
								"type": "DatasetReference",
								"parameters": {
									"schemaname": "NA",
									"tablename": "NA"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "DELTA_ACTIVITIES"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-18T16:24:24Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_dynamic_copy_activity_reads')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy_SQL_ODS_MAIN",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "truncate table [ODS].[PERSONS];\nselect * from [STG].[PERSONS] where sex='MALE'",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_sql",
								"type": "DatasetReference",
								"parameters": {
									"schemaname": {
										"value": "ODS",
										"type": "Expression"
									},
									"tablename": {
										"value": "PERSONS",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_sql",
								"type": "DatasetReference",
								"parameters": {
									"schemaname": {
										"value": "ODS",
										"type": "Expression"
									},
									"tablename": {
										"value": "PERSONS",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Log Audit",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Copy_SQL_ODS_MAIN",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[AUDIT].[UPDATE_AUDIT_INFO]",
							"storedProcedureParameters": {
								"ENDTIME": {
									"value": {
										"value": "@utcnow()",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"JOBNAME": {
									"value": "MovingDataFromCSVTOSQL",
									"type": "String"
								},
								"SOURCE_COUNT": {
									"value": {
										"value": "@activity('Copy_SQL_ODS_MAIN').output.rowsRead",
										"type": "Expression"
									},
									"type": "Int64"
								},
								"SOURCE_DATAPATH": {
									"value": {
										"value": "stg1container_INPUT_DATAFILES_Persons",
										"type": "Expression"
									},
									"type": "String"
								},
								"STARTTIME": {
									"value": {
										"value": "@pipeline().TriggerTime",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"TARGET_COUNT": {
									"value": {
										"value": "@activity('Copy_SQL_ODS_MAIN').output.rowsCopied",
										"type": "Expression"
									},
									"type": "Int64"
								},
								"TARGET_DATAPATH": {
									"value": "STG_PERSONS",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ls_sql",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "DELTA_ACTIVITIES"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-18T17:28:49Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_dynamic_copy_activity_testing_sp')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy_SQL_ODS_MAIN",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[MAIN].[LOAD_PERSONS]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_sql",
								"type": "DatasetReference",
								"parameters": {
									"schemaname": {
										"value": "ODS",
										"type": "Expression"
									},
									"tablename": {
										"value": "PERSONS",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_sql",
								"type": "DatasetReference",
								"parameters": {
									"schemaname": {
										"value": "MAIN",
										"type": "Expression"
									},
									"tablename": {
										"value": "PERSONS",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "DELTA_ACTIVITIES"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-17T19:43:19Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_metadata_copy_activity')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ds_sql",
								"type": "DatasetReference",
								"parameters": {
									"schemaname": {
										"value": "META",
										"type": "Expression"
									},
									"tablename": {
										"value": "DELTA",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup1').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy data1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "AzureSqlSink",
											"writeBehavior": "insert",
											"sqlWriterUseTableLock": false
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "ds_sql",
											"type": "DatasetReference",
											"parameters": {
												"schemaname": {
													"value": "@item().SOURCE_SCHEMA",
													"type": "Expression"
												},
												"tablename": {
													"value": "@item().SOURCE_T_NAME",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ds_sql",
											"type": "DatasetReference",
											"parameters": {
												"schemaname": {
													"value": "@item().TARGET_SCHEMA",
													"type": "Expression"
												},
												"tablename": {
													"value": "@item().TARGETT_T_NAME",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "DELTA_ACTIVITIES"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_notebook')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Notebook1",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/ravi.c.16209@gmail.com/exit",
							"baseParameters": {
								"Date": {
									"value": "@utcnow()",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ls_databricks",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "DELTA_ACTIVITIES"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_project1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup_Source",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT max(InsertDateTime) as MaxSource\n  FROM [dbo].[orders]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ds_sql",
								"type": "DatasetReference",
								"parameters": {
									"schemaname": {
										"value": "NA",
										"type": "Expression"
									},
									"tablename": {
										"value": "NA",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "Lookup_Target",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT LastReadDateandTime\n  FROM [META].[Watermark] where TableName='orders'",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ds_sql",
								"type": "DatasetReference",
								"parameters": {
									"schemaname": {
										"value": "NA",
										"type": "Expression"
									},
									"tablename": {
										"value": "NA",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "DATA Movement",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Lookup_Source",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Lookup_Target",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT OrderID,ProductID,CustomerID,UnitPrice,Quantity,InsertDateTime FROM dbo.Orders\nWHERE\nInsertDateTime>'@{activity('Lookup_Target').output.firstRow.LastReadDateandTime}' AND\nInsertDateTime<='@{activity('Lookup_Source').output.firstRow.MaxSource}'",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_sql",
								"type": "DatasetReference",
								"parameters": {
									"schemaname": {
										"value": "dbo",
										"type": "Expression"
									},
									"tablename": {
										"value": "orders",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_sql",
								"type": "DatasetReference",
								"parameters": {
									"schemaname": {
										"value": "MAIN",
										"type": "Expression"
									},
									"tablename": {
										"value": "orders",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Updating WaterMark",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Log Audit Success Details",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[UpdateWatermark]",
							"storedProcedureParameters": {
								"NewTime": {
									"value": {
										"value": "@{activity('Lookup_Source').output.firstRow.MaxSource}",
										"type": "Expression"
									}
								},
								"TableName": {
									"value": {
										"value": "orders",
										"type": "Expression"
									}
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ls_sql",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Customer Full Load Data",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Updating WaterMark",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "truncate table [MAIN].[Customers]",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_sql",
								"type": "DatasetReference",
								"parameters": {
									"schemaname": {
										"value": "dbo",
										"type": "Expression"
									},
									"tablename": {
										"value": "Customers",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_sql",
								"type": "DatasetReference",
								"parameters": {
									"schemaname": {
										"value": "MAIN",
										"type": "Expression"
									},
									"tablename": {
										"value": "Customers",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Log Audit Success Details",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "DATA Movement",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[AUDIT].[UPDATE_AUDIT_INFO]",
							"storedProcedureParameters": {
								"ENDTIME": {
									"value": {
										"value": "@utcnow()",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"JOBNAME": {
									"value": "DeltaForSQLtoSQL",
									"type": "String"
								},
								"SOURCE_COUNT": {
									"value": {
										"value": "@activity('DATA Movement').output.rowsRead",
										"type": "Expression"
									},
									"type": "Int64"
								},
								"SOURCE_DATAPATH": {
									"value": {
										"value": "SQL_DBO_ORDERTABLE",
										"type": "Expression"
									},
									"type": "String"
								},
								"STARTTIME": {
									"value": {
										"value": "@pipeline().TriggerTime",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"TARGET_COUNT": {
									"value": {
										"value": "@activity('DATA Movement').output.rowsCopied",
										"type": "Expression"
									},
									"type": "Int64"
								},
								"TARGET_DATAPATH": {
									"value": {
										"value": "ORDERTABLE",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ls_sql",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Log Audit_Fail",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "DATA Movement",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[AUDIT].[UPDATE_AUDIT_INFO]",
							"storedProcedureParameters": {
								"ENDTIME": {
									"value": {
										"value": "@utcnow()",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"JOBNAME": {
									"value": "MovingDataFromCSVTOSQL",
									"type": "String"
								},
								"SOURCE_COUNT": {
									"value": {
										"value": "NA",
										"type": "Expression"
									},
									"type": "Int64"
								},
								"SOURCE_DATAPATH": {
									"value": {
										"value": "stg1container_INPUT_DATAFILES_Persons",
										"type": "Expression"
									},
									"type": "String"
								},
								"STARTTIME": {
									"value": {
										"value": "@pipeline().TriggerTime",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"TARGET_COUNT": {
									"value": {
										"value": "NA",
										"type": "Expression"
									},
									"type": "Int64"
								},
								"TARGET_DATAPATH": {
									"value": "STG_PERSONS",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ls_sql",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Data_Movement_Daily_Sales",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Log Audit Success Details_Customer",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[MAIN].[LOAD_DailySales]"
						},
						"linkedServiceName": {
							"referenceName": "ls_sql",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Log Audit Success Details_Customer",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Customer Full Load Data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[AUDIT].[UPDATE_AUDIT_INFO]",
							"storedProcedureParameters": {
								"ENDTIME": {
									"value": {
										"value": "@utcnow()",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"JOBNAME": {
									"value": "CustomerFullLoad",
									"type": "String"
								},
								"SOURCE_COUNT": {
									"value": {
										"value": "@activity('Customer Full Load Data').output.rowsRead",
										"type": "Expression"
									},
									"type": "Int64"
								},
								"SOURCE_DATAPATH": {
									"value": {
										"value": "stg1container_INPUT_DATAFILES_Persons",
										"type": "Expression"
									},
									"type": "String"
								},
								"STARTTIME": {
									"value": {
										"value": "@pipeline().TriggerTime",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"TARGET_COUNT": {
									"value": {
										"value": "@activity('Customer Full Load Data').output.rowsCopied",
										"type": "Expression"
									},
									"type": "Int64"
								},
								"TARGET_DATAPATH": {
									"value": "XYZ",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ls_sql",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Log Audit_Fail_Customer",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Customer Full Load Data",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[AUDIT].[UPDATE_AUDIT_INFO]",
							"storedProcedureParameters": {
								"ENDTIME": {
									"value": {
										"value": "@utcnow()",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"JOBNAME": {
									"value": "CustomerFullLoad",
									"type": "String"
								},
								"SOURCE_COUNT": {
									"value": {
										"value": "NA",
										"type": "Expression"
									},
									"type": "Int64"
								},
								"SOURCE_DATAPATH": {
									"value": {
										"value": "XYZ",
										"type": "Expression"
									},
									"type": "String"
								},
								"STARTTIME": {
									"value": {
										"value": "@pipeline().TriggerTime",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"TARGET_COUNT": {
									"value": {
										"value": "NA",
										"type": "Expression"
									},
									"type": "Int64"
								},
								"TARGET_DATAPATH": {
									"value": "ABC",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ls_sql",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_Json_testing')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_gen2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "sample-json-file-download.json",
						"folderPath": "json_f",
						"fileSystem": "stg1container"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"returnReference": {
							"type": "string"
						},
						"orderReference": {
							"type": "string"
						},
						"customerId": {
							"type": "integer"
						},
						"timestamp": {
							"type": "string"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_gen2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_binary')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_gen2_stgalceusraw1dev",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"containername": {
						"type": "string"
					},
					"foldername": {
						"type": "string"
					},
					"filename": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().filename",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().foldername",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().containername",
							"type": "Expression"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_gen2_stgalceusraw1dev')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_gen2_testing')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_gen2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "output",
						"fileSystem": "json"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_gen2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_json')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_gen2",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"filename": {
						"type": "string"
					},
					"foldername": {
						"type": "string"
					},
					"containername": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().filename",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().foldername",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().containername",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_gen2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_stg_delimited')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_gen2_stgalceusraw1dev",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"containername": {
						"type": "string"
					},
					"foldername": {
						"type": "string"
					},
					"filename": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().filename",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().foldername",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().containername",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_gen2_stgalceusraw1dev')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_testing')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_testing",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"continername": {
						"type": "string"
					},
					"foldername": {
						"type": "string"
					},
					"filename": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().filename",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().foldername",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().continername",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_testing')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow1')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ds_df_sql_emp",
								"type": "DatasetReference"
							},
							"name": "SourceEmployee"
						},
						{
							"dataset": {
								"referenceName": "ds_df_deptno",
								"type": "DatasetReference"
							},
							"name": "SourceDeptNo"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ds_df_sink",
								"type": "DatasetReference"
							},
							"name": "deptsimsal"
						}
					],
					"transformations": [
						{
							"name": "RenamedDeptNotoDDeptNo"
						},
						{
							"name": "join1"
						},
						{
							"name": "derivedColumn1"
						},
						{
							"name": "select1"
						},
						{
							"name": "aggregate1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          ENO as integer,",
						"          ENAME as string,",
						"          JOB as string,",
						"          COMPID as integer,",
						"          DOJ as timestamp,",
						"          SAL as integer,",
						"          COMM as integer,",
						"          DEPTNO as integer",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> SourceEmployee",
						"source(output(",
						"          DEPTNO as integer,",
						"          DNAME as string,",
						"          LOCATION as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> SourceDeptNo",
						"SourceDeptNo select(mapColumn(",
						"          D_DEPTNO = DEPTNO,",
						"          DNAME,",
						"          LOCATION",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> RenamedDeptNotoDDeptNo",
						"SourceEmployee, RenamedDeptNotoDDeptNo join(DEPTNO == D_DEPTNO,",
						"     joinType:'outer',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     partitionBy('roundRobin', 2),",
						"     broadcast: 'auto')~> join1",
						"join1 derive(DEPTNO = coalesce(DEPTNO,D_DEPTNO)) ~> derivedColumn1",
						"derivedColumn1 select(mapColumn(",
						"          SAL,",
						"          DEPTNO",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"select1 aggregate(groupBy(DEPTNO),",
						"     SAL = sum(SAL)) ~> aggregate1",
						"aggregate1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 2,",
						"          DEPTNO",
						"     )) ~> deptsimsal"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow3')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "df_ds_json",
								"type": "DatasetReference"
							},
							"name": "djsondata"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "df_ds_json_to_csv",
								"type": "DatasetReference"
							},
							"name": "datatoscsvortable"
						}
					],
					"transformations": [
						{
							"name": "flattenjsondata"
						}
					],
					"scriptLines": [
						"source(output(",
						"          raw_data as (agebracket as string, backupnotes as string, contractedfromwhichpatientsuspected as string, currentstatus as string, dateannounced as string, detectedcity as string, detecteddistrict as string, detectedstate as string, estimatedonsetdate as string, gender as string, nationality as string, notes as string, patientnumber as string, source1 as string, source2 as string, source3 as string, statecode as string, statepatientnumber as string, statuschangedate as string, typeoftransmission as string)[]",
						"     ),",
						"     allowSchemaDrift: false,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     documentForm: 'singleDocument') ~> djsondata",
						"djsondata foldDown(unroll(raw_data, raw_data),",
						"     mapColumn(",
						"          age = raw_data.agebracket,",
						"          gender = raw_data.gender,",
						"          nationality = raw_data.nationality,",
						"          notes = raw_data.notes,",
						"          patientnumber = raw_data.patientnumber,",
						"          statecode = raw_data.statecode",
						"     ),",
						"     skipDuplicateMapInputs: false,",
						"     skipDuplicateMapOutputs: false) ~> flattenjsondata",
						"flattenjsondata sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> datatoscsvortable"
					]
				}
			},
			"dependsOn": []
		}
	]
}